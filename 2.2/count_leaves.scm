(define (count-leaves x )
    (cond ( ( null? x ) 0 )
          ( (not (pair? x)) 1 )
          ( else ( + (count-leaves (car x)) 
                ( count-leaves ( cdr x ) )))))

( define list1 ( list 1 ( list 2 ( list 3 (list 4 7 (cons (list 5 6 ) (list 1 2) ) ) ) ) ) )
( define x (cons (list 1 2 ) (list 1 2 2)) )
(length list1 )
;(count-leaves list1 )
